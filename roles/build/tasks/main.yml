---

- name: Set yum cache dir to /vagrant/yum/... dir (that is mounted on the host)
  lineinfile: dest=/etc/yum.conf regexp=^cachedir= line=cachedir=/vagrant/yum/$basearch/$releasever

- name: Set keepcache=1
  lineinfile: dest=/etc/yum.conf regexp=^keepcache= line=keepcache=1

- name: Exclude kernel packages in yum
  lineinfile: dest=/etc/yum.conf regexp=^exclude=kernel line=exclude=kernel*

- name: Set timezone
  file: src=/usr/share/zoneinfo/{{ timezone }}  dest=/etc/localtime state=link force=yes


# Extra Packages for Enterprise Linux
# https://fedoraproject.org/wiki/EPEL
- name: Enable EPEL repo
  yum: name=epel-release.noarch state=present


# Install the "REMI" repo which contain php packages that override the default
# packages from the core distro. CentOD 7 ships with php 5.4
- name: Install REMI repo
  yum: name=http://rpms.famillecollet.com/enterprise/remi-release-7.rpm state=present

- name: Enable REMI repo
  copy: src=remi.repo dest=/etc/yum.repos.d/remi.repo

- name: Remove default php
  yum:
    state: removed
    name:
    - php-cli
    - php-mbstring
    - php-mcrypt
    - php-pdo
    - php-intl
    - php-dom
    - php-bcmath

    #- nodejs
    #- nodejs-less.noarch

- name: Install PHP 5.6 and 7.2, curl, git
  yum:
    state: present
    name:
    # php 5.6
    - php56-php-cli
    - php56-php-mbstring
    - php56-php-mcrypt
    - php56-php-pdo
    - php56-php-intl
    - php56-php-dom
    - php56-php-bcmath
    - php56-php-gmp
    - php56-php-gd

    # php 7.2
    - php72-php-cli
    - php72-php-mbstring
    - php72-php-mcrypt
    - php72-php-pdo
    - php72-php-intl
    - php72-php-dom
    - php72-php-bcmath
    - php72-php-gmp
    - php72-php-pecl-libsodium
    - php72-php-gd

    - curl
    - git
    - unzip

- name: Put php.ini for 5.6
  template: src='php.ini.j2' dest='/etc/opt/remi/php56/php.ini'

- name: Put php.ini for 7.2
  template: src='php.ini.j2' dest='/etc/opt/remi/php72/php.ini'

- name: Make /var/log/php_errors.log world writable
  file: path=/var/log/php_errors.log mode="a+rw" state=touch

- name: install composer
  shell:
    cmd: curl -sS https://getcomposer.org/installer | /usr/bin/php72 -- --install-dir=/usr/local/bin
    creates: /usr/local/bin/composer
    warn: false

- name: rename composer.phar to composer
  shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer creates=/usr/local/bin/composer

- name: make composer executable
  file: path=/usr/local/bin/composer mode="a+x"


## Nodejs / NPM / Yarn stack ##

# Note that that the centos 7 nodejs (version 6), nmp and the nodjejs-less module are installed for
# The Stepup components that still use Assetic (Currently (Release 17) these are: Stepup-Gateway, Stepup-Selfservice
# and Stepup-RA) require nodejs and nodejs-less at install time (not at build time)

# Newer components require a newer nodejs at build time only. We use nvm to install newer node versions and to switch to
# a newer node version.
# nvm is installed as root. Add "source /root/.bashrc" to the shell command to enable nvm, then use "nvm use <version>"
# to enable one of the installed versions. ".bashrc" is not sourced by the ansible shell command, so you must add
# "source /root/.bashrc && nvm use 12 && <the command>" to the shell command otherwise node will not be available.

- name: Install nodejs and yarn using nvm for the vagrant user
  block:

  - name: "Install node version manager (nvm)"
    shell:
      cmd: "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash"
      warn: false # disable curl warning
      creates: /home/vagrant/.nvm/


  - name: "Install node version 10"
    shell:
      cmd: "source /home/vagrant/.bashrc && nvm install 10"

  - name: "Install npm module 'yarn' for node version 10"
    shell:
      cmd: "source /home/vagrant/.bashrc && nvm use 10 && npm install --global yarn"


  - name: "Install node version 12"
    shell:
      cmd: "source /home/vagrant/.bashrc && nvm install 12"

  - name: "Install npm module 'yarn' for node version 12"
    shell:
      cmd: "source /home/vagrant/.bashrc && nvm use 12 && npm install --global yarn"

  become_user: vagrant
